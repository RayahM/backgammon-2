#BlueJ class context
comment0.params=newStart\ newRoll\ newEnd\ newGame\ newColor
comment0.target=PartialMove(int,\ int,\ int,\ JBackgammon,\ int)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ MoveOne\n\ Note\:\ start\ +\ roll\ might\ not\ equal\ end\ when\ bearing\ off\n\ but\ creator\ of\ PartialMove\ should\ use\ static\ function\n\ int\ Board.endPointMovingFrom(int\ start,\ int\ steps,\ int\ color,\ Board\ board)\n\ to\ calculate\ end.\n\ and\ no\ higher\ blots\ can\ use\ a\ too-high\ roll.\n
comment1.params=
comment1.target=int\ getStart()
comment2.params=
comment2.target=int\ getEnd()
comment3.params=
comment3.target=int\ getColor()
comment4.params=
comment4.target=int\ getRoll()
comment5.params=
comment5.target=java.lang.String\ toString()
comment6.params=other
comment6.target=boolean\ equals(java.lang.Object)
comment6.text=\n\ has\ to\ check\ values\ inside\ PartialMoves\n
comment7.params=
comment7.target=int\ hashCode()
comment8.params=other
comment8.target=int\ compareTo(PartialMove)
comment8.text=\n\ required\ function\ for\ implementing\ "Comparable"\n\ returns\ negative\ integer,\ 0,\ or\ a\ positive\ integer\ depending\ on\ whether\ the\ \n\ "this"\ is\ less\ than,\ equal\ to,\ or\ greater\ than\ the\ other\ object\n
numComments=9
