#BlueJ class context
comment0.params=myNewBoard\ p
comment0.target=Communication(Board,\ CommunicationAdapter)
comment0.text=\n\ \n
comment1.params=
comment1.target=void\ listen()
comment1.text=\n\ //Start\ listening\ on\ the\ right\ port\n
comment10.params=
comment10.target=void\ sendResetReq()
comment10.text=\n\ Sends\ a\ request\ for\ a\ new\ game\n\ "$N\:"\n
comment11.params=reset
comment11.target=void\ sendResetResp(int)
comment11.text=\n\ Sends\ the\ response\ for\ a\ reset\ request\n\ "$Y\:int\:"\n
comment12.params=
comment12.target=boolean\ isConnected()
comment12.text=\n\ was\ "Connected(\ )\n\ Returns\ the\ state\ of\ the\ connection\n
comment13.params=packet
comment13.target=void\ onGetPacket(java.lang.String)
comment13.text=\n\ \ Parses\ the\ packets\ received.\ \ Possible\ packets\ are\n\ "$R\:int\:int\:"\ \ \ \ //\ send\ diceRoll\n\ "$M\:int\:int\:"\ \ \ //\ Send\ a\ player's\ move\n\ "$T\:text"\ \ \ //\ text\ message\ to\ the\ other\ player\n\ "$E\:"\ \ \ //\ Ends\ the\ player's\ turn\n\ "$B\:int\:"\ \ \ //\ Sends\ a\ man\ on\ the\ bar\n\ "$L\:"\ \ \ \ //\ Tells\ the\ other\ player\ they\ lost\n\ "$N\:"\ \ \ \ \ //request\ for\ a\ new\ game\n\ "$Y\:int\:"\ \ \ \ //response\ for\ a\ reset\ request\n
comment14.params=
comment14.target=void\ socketerror()
comment14.text=\n\ Gets\ called\ when\ there's\ an\ error\ writing/reading\ on\ the\ socket\n
comment15.params=
comment15.target=void\ connrefused()
comment15.text=\n\ Gets\ called\ when\ there's\ an\ error\ connecting\n
comment2.params=s
comment2.target=void\ connectionEstablished(java.net.Socket)
comment2.text=\n\ //Executes\ when\ a\ connection\ with\ another\ computer\ is\ opened\n
comment3.params=address
comment3.target=void\ connect(java.lang.String)
comment3.text=\n\ //This\ connects\ to\ another\ computer\n
comment4.params=first\ second
comment4.target=void\ sendRoll(int,\ int)
comment4.text=\n\ \ Send\ information\ about\ a\ roll\ of\ dice\n\ \ "$R\:int\:int\:"\n
comment5.params=oldpos\ newpos
comment5.target=void\ sendMove(int,\ int)
comment5.text=\n\ Send\ a\ player's\ move\n\ "$M\:int\:int\:"\n
comment6.params=text
comment6.target=void\ sendMessage(java.lang.String)
comment6.text=\n\ Send\ a\ text\ message\ to\ the\ other\ player\n\ "$T\:text"\n
comment7.params=
comment7.target=void\ sendEndTurn()
comment7.text=\n\ Ends\ the\ player's\ turn\n\ "$E\:"\n
comment8.params=pointNum
comment8.target=void\ sendOnBar(int)
comment8.text=\n\ Sends\ a\ man\ on\ the\ bar\n\ "$B\:int\:"\n
comment9.params=
comment9.target=void\ sendLose()
comment9.text=\n\ Tells\ the\ other\ player\ they\ lost\n\ "$L\:"\n
numComments=16
