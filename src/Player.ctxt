#BlueJ class context
comment0.params=newColor\ newIsAI
comment0.target=Player(int,\ boolean)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Player\n\ \n\ Do\ I\ need\ a\ copy\ constructor?\ Not\ if\ these\ are\ sorta\ singleton\n
comment1.params=
comment1.target=int\ getColor()
comment1.text=\n\ perhaps\ this\ should\ instead\ be\ compared\ to\ singleton\ white/black??\n
comment10.params=
comment10.target=int\ getBeyondBearOffLoc()
comment11.params=
comment11.target=boolean\ getIsAI()
comment11.text=\n\ Maybe\ the\ player\ should\ be\ linked\ to\ its\ AI\ brain\ if\ it\ is\ an\ AI??\n
comment12.params=i
comment12.target=boolean\ inFinalQuadrant(int)
comment12.text=\n\ utility\ for\ checking\ that\ a\ number\ is\ in\ the\ final\ quadrant\ on\ the\ board.\n\ Note\:\ only\ 6\ points\ are\ in\ this\ quadrant,\ not\ bearOffLoc\ and\ beyondBearOffLoc\!\n
comment13.params=i
comment13.target=boolean\ inBoardZone(int)
comment13.text=\n\ utility\ for\ checking\ that\ a\ number\ is\ in\ the\ range\ of\ numbered\ points\ on\ the\ board.\n\ Note\:\ "inclusive"\ range\!\ 1\ and\ 24\ are\ in\ range\ but\ bearOffLoc\ and\ beyondBearOffLoc\ are\ NOT\!\n
comment14.params=i\ oneEnd\ otherEnd
comment14.target=boolean\ inRange(int,\ int,\ int)
comment14.text=\n\ utility\ for\ checking\ that\ a\ number\ is\ in\ a\ range.\n\ Note\:\ "inclusive"\ range\!\ 3\ and\ 5\ are\ in\ range\ "3..5"\n
comment15.params=currPoint
comment15.target=int\ nextPoint(int)
comment15.text=\n\ So\ we\ can\ walk\ from\ starting\ "low"\ point\ to\ bear-off\ zone\ high\ points\n\ black\ moves\ from\ (low)\ 24\ to\ 1\ (0),\ \n\ white\ moves\ from\ (low)\ 1\ to\ 24\ (25)\ \n\ \n\ @param\ \ currPoint\ \ \ must\ be\ 1..howManyPoints\n\ @return\ \ \ \ \ for\ black\ return\ --currPoint,\ white\ gets\ ++currPoint\n\ \n\ BEWARE\:\ use\ inBoardZone(\ )\ or\ inFinalQuadrant(\ )\ when\ looping,\ \n\ DON'T\ use\ <\ or\ >\ or\ \=\=\ or\ \!\=\ since\ we\ might\ be\ counting\ backwards\!\n\ \n\ Note\:\ this\ might\ go\ out\ of\ bounds\ and\ return\ \n\ Board.WHITE_BEAR_OFF_LOC,\ Board.BLACK_BEAR_OFF_LOC,\n\ but\ not\ Board.WHITE_PAST_BEAR_OFF_LOC,\ or\ Board.BLACK_PAST_BEAR_OFF_LOC\n
comment16.params=currPoint
comment16.target=int\ prevPoint(int)
comment16.text=\n\ So\ we\ can\ walk\ from\ starting\ "low"\ point\ to\ bear-off\ zone\ high\ points\n\ black\ moves\ from\ (low)\ 24\ to\ 1\ (0),\ \n\ white\ moves\ from\ (low)\ 1\ to\ 24\ (25)\ \n\ \n\ @param\ \ currPoint\ \ \ must\ be\ 1..howManyPoints\n\ @return\ \ \ \ \ for\ black\ return\ ++currPoint,\ white\ gets\ --currPoint\n\ \n\ BEWARE\:\ use\ inBoardZone(\ )\ or\ inFinalQuadrant(\ )\ when\ looping,\ \n\ DON'T\ use\ <\ or\ >\ or\ \=\=\ or\ \!\=\ since\ we\ might\ be\ counting\ backwards\!\n\ \n\ Note\:\ this\ might\ go\ out\ of\ bounds\ and\ return\ \n\ Board.WHITE_BEAR_OFF_LOC,\ Board.BLACK_BEAR_OFF_LOC,\n\ but\ not\ Board.WHITE_PAST_BEAR_OFF_LOC,\ or\ Board.BLACK_PAST_BEAR_OFF_LOC\n
comment17.params=
comment17.target=Player\ theReversePlayerColor()
comment17.text=\n\ If\ given\ white,\ this\ returns\ black,\ and\ vice-versa.\n\ If\ we\ ever\ get\ a\ game\ with\ more\ than\ 2\ colors,\ this\ will\ die,\ and\n\ so\ will\ its\ caller\ 'howImportantIsThisPoint(\ )'\n
comment18.params=color
comment18.target=java.lang.String\ colorName(int)
comment18.text=\n\ Utility\ for\ toString\ of\ our\ 2\ colors\ (black,white)\n\ Board\ has\ a\ version\ of\ this\ that\ includes\ neutral.\ Should\ this\ one\ include\ neutral??\n
comment19.params=
comment19.target=java.lang.String\ toString()
comment19.text=\n\ colorName.\n\ Was\ wordy\ "[player\ black]"\ but\ is\ now\ "black"\n
comment2.params=
comment2.target=java.awt.Color\ getJavaColor()
comment20.params=
comment20.target=boolean\ legitColor()
comment20.text=\n\ Tells\ us\ if\ a\ Player's\ color\ is\ legal\ (only\ black\ and\ white\ currently\ allowed).\n\ See\ legitColor\ if\ you're\ checking\ points,\ which\ can\ also\ be\ "neutral"\ color.\n\ usage\ "if\ (player.legitColor(\ ))\ {\ ..."\n
comment21.params=color
comment21.target=boolean\ legitColor(int)
comment3.params=
comment3.target=int\ getHowManyBlotsRequired()
comment3.text=\n\ for\ handicapping\ could\ allow\ someplayers\ to\ have\ more\ or\ less\ blots\n
comment4.params=
comment4.target=int\ getLowPoint()
comment4.text=\n\ black\ and\ white\ supply\ different\ values\ for\ these\ so\ that\ I\ \n\ can\ use\ a\ general\ purpose\ for\ loop\n
comment5.params=
comment5.target=int\ getHighPoint()
comment6.params=
comment6.target=int\ getStartOfFinalQuadrant()
comment6.text=\n\ replacing\ the\ specific\ white\ and\ black\ bear\ off\ zones\ that\ Board\ had\n\ so\ that\ I\ can\ use\ a\ single\ for\ loop\ for\ either\ color\ \n\ (incrementing\ using\ the\ Player.nextPoint(\ )\ method\ below)\n
comment7.params=
comment7.target=int\ getEndOfFinalQuadrant()
comment8.params=
comment8.target=int\ getBarLoc()
comment9.params=
comment9.target=int\ getBearOffLoc()
numComments=22
